# vim:ft=tmux:cc=79

# Disclaimer: following config is adapted for Dvorak layout
# https://github.com/vbauerster/PDvorak

# Cool arcticles about tmux:
# https://github.com/tmux/tmux/blob/master/FAQ
# https://robots.thoughtbot.com/love-hate-tmux
# https://gist.github.com/MohamedAlaa/2961058
# https://github.com/tmux-plugins/tmux-sensible
# https://github.com/tmux-plugins/tmux-pain-control
# https://learnxinyminutes.com/docs/tmux

# Hierarchy:
#  Server
#  ㄴSession
#    ㄴWindow
#      ㄴPane

# Options:
# - Session options (set-option [-g])
# - Window options (set-window-option [-g])

# -------------------------------------------------------------------
# TMUX_VERSION
# -------------------------------------------------------------------
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -d' ' -f2)"

# -------------------------------------------------------------------
# Session options
# -------------------------------------------------------------------
# set-option -g default-terminal "xterm-screen-256color"
# set-option -g default-terminal "screen-256color"
set-option -g default-terminal "tmux-256color"

# Add truecolor support (tmux info | rg Tc)
# https://wiki.archlinux.org/index.php/Tmux#24-bit_color
set-option -sa terminal-overrides ',xterm-256color:Tc'

# this probably only needs to happen in OS X (correct italic)
set-option -sa terminal-overrides ',xterm*:sitm=\E[3m'

# <S-Home><S-End>
# set-option -ga terminal-overrides ',xterm-256color:kEND=\E[F:kHOM=\E[H'

# Use xterm keycodes for Shift-F1 etc (for Vim).
# https://wiki.archlinux.org/index.php/Tmux#xterm-keys
set-option -g xterm-keys on

# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/issues/8
# source-file -q ~/.tmux/tmux-osx.conf

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set-option -s escape-time 25

# increase scrollback buffer size
set-option -g history-limit 30000

# tmux messages are displayed for 3 seconds
set-option -g display-time 3000

set-option -g display-panes-time 3000

# Update the status line every interval seconds
# devault value is 15
# set-option -g status-interval 10

# Terminal emulator window title
set-option -g set-titles on
# Use hostname (@#h) in set-titles-string with SSH.
if-shell 'test -n "$SSH_CONNECTION"' 'set -g set-titles-string "[tmux: #S:#I.#P @#h] #T"' 'set -g set-titles-string "[tmux: #S:#I.#P] #T"'

# unbind-key C-b (the default prefix)
unbind-key C-b
# C-b is not acceptable as a prefix, neither C-a, because both are used by Vim
# http://superuser.com/a/178223/578741
set-option -g prefix C-Space

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set-option -g status-keys emacs

# requires by 'roxma/vim-tmux-clipboard'
# focus events enabled for terminals that support them
set-option -g focus-events on

# start window numbers at 1 to match keyboard order with tmux window order
# set-option -g base-index 1

# renumber windows sequentially after closing any of them
set-option -g renumber-windows on

# increase scrollback lines
set-option -g history-limit 14000

# Mouse
set-option -g mouse on

# -------------------------------------------------------------------
# Window options
# -------------------------------------------------------------------
set-window-option -g mode-keys vi

set-window-option -g pane-base-index 1

# super useful when using "grouped sessions" and multi-monitor setup
set-window-option -g aggressive-resize on

# visual notification of activity in other windows
set-window-option -g monitor-activity on
# set -g visual-activity on

# auto rename
# set-window-option -g automatic-rename on
# https://unix.stackexchange.com/questions/235272/format-tmuxs-pane-current-path/393072#393072
# The default  window-status-format is `#I:#W#F'
# set-window-option -g automatic-rename-format "#{b:pane_current_path}"
# set-window-option -g automatic-rename-format "#{=16:pane_title}"
set-window-option -g automatic-rename-format "#{b:pane_title}"

# -------------------------------------------------------------------
# Key bindings
# -------------------------------------------------------------------
bind-key C new-window -c "#{pane_current_path}"

# shortcut for reloading config
bind-key R source-file ~/.tmux.conf \; display-message "[tmux #{version}] reloaded ~/.tmux.conf"

# fzf-locate
# https://github.com/junegunn/fzf/wiki/Examples-(tmux)
bind-key M-* run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(locate / | fzf -m | paste -sd\\  -)\"'"

# Capture pane and open in nvim
bind-key M-d run 'tmux capture-pane -S -10000 -p > /tmp/tmux-capture.txt' \; new-window "kak /tmp/tmux-capture.txt"

# Screen capture
bind-key M-s run "screencapture -l$(osascript -e 'tell app \"iTerm\" to id of window 1') -x -o -P /tmp/$(date +%Y%m%d-%H%M%S).png"

# copy-mode-vi bindings
# https://github.com/tmux/tmux/issues/592
# https://github.com/tmux/tmux/commit/76d6d3641f271be1756e41494960d96714e7ee58
# v     = rectangle-toggle
# space = begin-selection
# Enter = copy-selection-and-cancel
# C-d   = halfpage-down
# C-u   = halfpage-up

# is_tmux_modern='expr ${TMUX_VERSION##*.} \>= 4'
is_tmux_modern='[ ${TMUX_VERSION%%.*} -eq 2 -a ${TMUX_VERSION##*.} -ge 4 ]'
if-shell "$is_tmux_modern" "bind -Tcopy-mode-vi y send -X copy-selection" "bind -tvi-copy y copy-selection"
if-shell "$is_tmux_modern" "bind -Tcopy-mode-vi Bspace send -X halfpage-up" "bind -tvi-copy Bspace halfpage-up"
if-shell "$is_tmux_modern" "bind -Tcopy-mode-vi Tab send -X halfpage-down" "bind -tvi-copy Tab halfpage-down"
if-shell "$is_tmux_modern" "bind -Tcopy-mode-vi C-j send -X -N5 cursor-down"
if-shell "$is_tmux_modern" "bind -Tcopy-mode-vi C-k send -X -N5 cursor-up"

# '[' copy-mode
# ']' paste-buffer
# '#' list-buffers
# '=' choose-buffer
bind-key Y copy-mode
bind-key y paste-buffer
bind-key '"' choose-buffer
# bind-key b list-buffers

# default: Space next-layout
# bind-key Tab last-window
# bind-key BTab switch-client -l
bind-key Space last-window
bind-key Tab switch-client -l
bind-key Enter command-prompt

# default: L switch-client -l
# bind-key \; switch-client -l

# unbind-key &
bind-key X confirm-before -p "kill-window #W? (y/n)" kill-window

# Synchronize panes
# https://sanctum.geek.nz/arabesque/sync-tmux-panes/
# bind-key 0 set-window-option synchronize-panes \; display-message "synchronize-panes: #{?synchronize-panes,on,off}"

# pane movement
# http://unix.stackexchange.com/questions/14300/moving-tmux-pane-to-window
# bind-key j command-prompt -p "join pane from:"  "join-pane -s ':%%'"
# bind-key @ command-prompt -p "send pane to:"  "join-pane -t ':%%'"

# Marked pane must be present (prefix-m), for the following to work
# The marked pane will be used as -s src-pane, whereas -t dst-pane is active pane
# mnemonic: exchange
bind-key P join-pane

# join the last active pane/window to the current window.
bind-key p join-pane -s !

bind-key S swap-pane

# swap the last active pane/window with the current window.
bind-key s swap-pane -s !

bind-key W choose-tree -Zs

# Move pane to new Tab(window)
# default: ! break-pane
bind-key T break-pane

# jump between panes
# default: ; last-pane
bind-key e last-pane
bind-key E last-pane \; resize-pane -Z
# bind-key BSpace last-pane
# default: q display-panes
# bind-key b display-panes
# default: [ copy-mode
# default: ] paste-buffer
bind-key -r ] select-pane -t :.+
bind-key -r [ select-pane -t :.-
# default: o select-pane -t :.+
# o is symmetric with n
bind-key -r o previous-window
bind-key -r n next-window
# -a = with alert
# bind-key M-p previous-window -a
bind-key M-o previous-window -a
# bind-key M-o rotate-window -D
# bind-key -r r rotate-window -D
bind-key -r r rotate-window

bind-key * select-window -t :=0
bind-key F1 select-window -t :=1
bind-key F2 select-window -t :=2
bind-key F3 select-window -t :=3
bind-key F4 select-window -t :=4
bind-key F5 select-window -t :=5
bind-key F6 select-window -t :=6
bind-key F7 select-window -t :=7
bind-key F8 select-window -t :=8
bind-key F9 select-window -t :=9

# pane_resizing_bindings
# https://github.com/tmux-plugins/tmux-pain-control
bind-key -r H resize-pane -L 4
bind-key -r U resize-pane -R 4
bind-key -r J resize-pane -D 4
bind-key -r K resize-pane -U 4

# pane_split_bindings
# https://github.com/tmux-plugins/tmux-pain-control/blob/master/screenshots/pane_splitting.gif
# a/A is symmetric with "-"
bind-key a split-window -h -c "#{pane_current_path}"
bind-key A split-window -fh -c "#{pane_current_path}"
# default: - delete-buffer
bind-key - split-window -v -c "#{pane_current_path}"
bind-key _ split-window -fv -c "#{pane_current_path}"
# bind-key "%" split-window -h -c "#{pane_current_path}"
# bind-key '"' split-window -v -c "#{pane_current_path}"

# window_move_bindings
# http://superuser.com/questions/343572/how-do-i-reorder-tmux-windows
bind-key -r > swap-window -t :+
bind-key -r < swap-window -t :-
bind-key 0 swap-window -t 0

# pane_navigation_bindings
bind-key h select-pane -L
# u is symmetric with h
bind-key u select-pane -R
bind-key j select-pane -D
bind-key k select-pane -U

# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# send prefix key to nested tmux session
# <C-Space><C-Space> (whithout depressing ctrl)
bind-key C-Space if-shell "$is_vim" "send-keys C-Space" "send-prefix"

# Easy send-prefix for nested tmux session, for example over ssh
# -n is an alias for -T root, means bypass prefix
# bind-key -n C-_ if-shell "$is_vim" "send-keys C-_" "send-prefix"
bind-key -n C-_ send-prefix

# quick layouts preset
bind-key = select-layout -E
bind-key v select-layout even-horizontal
bind-key V select-layout even-vertical
bind-key M-t select-layout tiled

# default: l last-window
bind-key -r + next-layout
bind-key -r l previous-layout

# bind-key e send "V" C-m "nvim " \; paste-buffer \; send C-m

source-file -q ~/.tmux/tmux-theme-light.conf

set -g status-right '#{prefix_highlight}#{cpu_bg_color}#{cpu_fg_color} CPU: #{cpu_icon} #{cpu_percentage} | %a %h-%d %H:%M '

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'Morantron/tmux-fingers'
# set -g @plugin 'tmux-plugins/tmux-copycat'
# set -g @plugin 'thalesmello/tmux-copycat'
# set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'jbnicolai/tmux-fpp'

set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=white,bg=yellow,bold'

set -g @tpm-update "@"
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
run '~/.tmux/plugins/tpm/tpm'
